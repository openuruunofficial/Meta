#!/usr/bin/env python3
# Copyright (c) 2019 Kyler "FÃ©lix" Eastridge
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import configparser
import argparse

parser = argparse.ArgumentParser(description='Do magic with INI files!')
parser.add_argument('file', help='Input file')
parser.add_argument('mode', help='get, set, delete')
parser.add_argument('object', nargs="?", help='object')
parser.add_argument('key', nargs="?", help='object key')
parser.add_argument('value', nargs="?", help='key value')
parser.add_argument('--no-value-mode', default=2, choices=(0,1,2), type=int, help='0: Forbid, 1: Yes + no value, 2: Yes + empty string(default)')
args = parser.parse_args()

args.mode = args.mode.lower()

config = configparser.ConfigParser(allow_no_value=args.no_value_mode==1)

config.read(args.file)

if args.mode == "get":
    if args.object:
        if args.object in config:
            if args.key:
                if args.key in config[args.object]:
                    print(config[args.object][args.key])
                    exit(0)
                else:
                    print("Key does not exist!")
                    exit(1)
            else:
                for k in config[args.object]:
                    print(k)
                exit(2)
        else:
            print("Object does not exist!")
            exit(1)
    else:
        for k in config:
            if k == "DEFAULT" and len(config[k]) == 0:
                continue
            print(k)
        exit(2)

elif args.mode == "set":
    if not args.object:
        print("Missing parameter: object")
        exit(1)
    if not args.key:
        print("Missing parameter: key")
        exit(1)
    
    if not args.value:
        if args.no_value_mode == 0:
            print("Missing parameter: value")
            exit(1)
        elif args.no_value_mode == 2:
            args.value = ""
    
    if args.object not in config:
        config[args.object] = {}
    
    if args.key in config[args.object] and config[args.object][args.key] == args.value:
        exit(2)
    
    config[args.object][args.key] = args.value
    
    with open(args.file, "w") as f:
        config.write(f)

elif args.mode == "delete":
    if not args.object:
        print("Missing parameter: object")
        exit(1)
    
    if args.object not in config:
        exit(0)
    
    if not args.key:
        del config[args.object]
    else:
        del config[args.object][args.key]
    
    with open(args.file, "w") as f:
        config.write(f)
else:
    print("Unknown mode: "+args.mode)
